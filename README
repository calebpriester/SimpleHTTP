Name:  Caleb Priester
Class: CPSC3600
ASG:   HW3

KNOWN PROBLEMS:
   My program is built assuming that the user will send it the correct 
   parameters, and so it will crash if the command line contained an error
   when the program was called. In short, there is no error detection in that
   section.  Another issue is detecting 400 errors in the http server.  There
   are so many things that could constitute a 400 error, but my program only 
   checks to see that "HTTP/1.1" is apparent in the message.

DESIGN:
   simhttp.c:
     The simple http server heavily relies on string.h in order to parse 
     requests and create responses.  The errors are detected as such:

     -400: Check whether the request contains "HTTP/1.1." If not, this is a 
       400 error.
     -403: Try to open the file at the specified directory and fail.  If errno
       is 13, this is a 403 error.  Also, if the user tries to leave the server
       directory using "../," this is a 403 error.
     -404: Try to open the file at the specified directory and fail.  If errno
       is 2, this is a 404 error.
     -405: Check whether the first word in the message is "GET" or "HEAD."  If
       not, this is a 405 error.

     strtok() and strstr() are heavily employed to break up the response into
     sections and identify whether a phrase is contained in the request.  
     strcat() is used to append new headers to the http response generated by 
     the server.  All communication with clients occurs using TCP connections.

   simget.c:
     The simple http client builds an http request of containing only a host 
     header.  The IP of the desired server is found using gethostbyname() with
     the URL provided on the command line.  After this simple request is built,
     it is sent over a TCP socket to the desired http server and receives the 
     response.  The head of the response is truncated off and the body (the 
     contents of the desired file) is either printed to stdout or a filename
     specified in the command line.
